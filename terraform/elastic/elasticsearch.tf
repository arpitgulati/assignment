module "elasticsearch_autoscaling_group" {
  source                          = "../modules/autoscaling-cluster-as"
  environment                     = "${var.environment}"
  vpc_id                          = "${var.vpc_id}"
  subnet_name                     = "elastic-az-*"
  subnet_prefix                   = "elastic-public"
  instance_type                   = "${lookup(var.instance_types, "elasticsearch-server")}"
  instance_ebs_optimized          = "true"
  min_size                        = "${lookup(var.elasticsearch_autoscaling_group_params, "min-size")}"
  max_size                        = "${lookup(var.elasticsearch_autoscaling_group_params, "max-size")}"
  desired_capacity                = "${lookup(var.elasticsearch_autoscaling_group_params, "desired-size")}"
  autoscaling_cpu_high_threshold  = "${lookup(var.elasticsearch_autoscaling_group_params, "cpu-high-threshold")}"
  autoscaling_cpu_low_threshold   = "${lookup(var.elasticsearch_autoscaling_group_params, "cpu-low-threshold")}"
  autoscaling_cpu_high_threshold_evaluation_period = "${lookup(var.elasticsearch_autoscaling_group_params, "cpu-high-threshold-evaluation-period")}"
  autoscaling_cpu_low_threshold_evaluation_period = "${lookup(var.elasticsearch_autoscaling_group_params, "cpu-low-threshold-evaluation-period")}"
  autoscaling_cpu_high_statistic  = "${lookup(var.elasticsearch_autoscaling_group_params, "cpu-high-statistic")}"
  autoscaling_cpu_low_statistic   = "${lookup(var.elasticsearch_autoscaling_group_params, "cpu-low-statistic")}"
  health_check_type               = "${lookup(var.elasticsearch_autoscaling_group_params, "health-check-type")}"
  root_volume_size                = "${lookup(var.root_volume_sizes, "elasticsearch-server")}"
  name                            = "lab"
  codebase                        = "elasticsearch"
  # repo_path                       = "${lookup(var.repo_path_map, "elasticsearch-server")}"
  server_type                     = "app-server"
  ami_name_prefix                 = "base-ami"
  aws_account_id                  = "${var.aws_account_id}"
  key_name                        = "${var.key_name}"
  domain_name                     = "infra"
  associate_public_ip_address    = "true"
  ansible_staging_dir             = "${var.ansible_staging_dir}"
  ansible_vault_password          = "${var.ansible_vault_password}"
  ansible_base_repo_url           = "${var.ansible_base_repo_url}"
  ansible_base_tags               = "hostname"
  security_group_ids              = "sg-cb498bac"
  ec2_instance_iam_profile_name   = "${var.ec2_instance_iam_profile_name}"
  ec2_instance_iam_profile_arn    =  "${var.ec2_instance_iam_profile_arn}"
  
}

